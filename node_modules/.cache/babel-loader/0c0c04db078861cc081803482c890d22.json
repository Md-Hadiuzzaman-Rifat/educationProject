{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { get, getDatabase, orderByKey, query, ref } from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\nexport default function useAnswers(videoID) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  useEffect(() => {\n    async function fetchAnswers() {\n      // database related works\n      const db = getDatabase();\n      const answerRef = ref(db, \"answers/\" + videoID + \"/questions\");\n      const answerQuery = query(answerRef, orderByKey());\n\n      try {\n        setError(false);\n        setLoading(true); // request firebase database\n\n        const snapshot = await get(answerQuery);\n        setLoading(false);\n\n        if (snapshot.exists()) {\n          setAnswers(prevAnswers => {\n            return [...prevAnswers, ...Object.values(snapshot.val())];\n          });\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n        setError(true);\n      }\n    }\n\n    fetchAnswers();\n  }, [videoID]);\n  return {\n    loading,\n    error,\n    answers\n  };\n}\n\n_s(useAnswers, \"LJeXvbyKmS/toQM5JiIp3riUxdw=\");","map":{"version":3,"sources":["E:/hadi/react/react-quiz/src/hooks/useAnswers.js"],"names":["get","getDatabase","orderByKey","query","ref","useEffect","useState","useAnswers","videoID","loading","setLoading","error","setError","answers","setAnswers","fetchAnswers","db","answerRef","answerQuery","snapshot","exists","prevAnswers","Object","values","val","err","console","log"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,WAAd,EAA2BC,UAA3B,EAAuCC,KAAvC,EAA8CC,GAA9C,QAAyD,mBAAzD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,YAAf,GAA8B;AAC5B;AACA,YAAMC,EAAE,GAAGf,WAAW,EAAtB;AACA,YAAMgB,SAAS,GAAGb,GAAG,CAACY,EAAD,EAAK,aAAaR,OAAb,GAAuB,YAA5B,CAArB;AACA,YAAMU,WAAW,GAAGf,KAAK,CAACc,SAAD,EAAYf,UAAU,EAAtB,CAAzB;;AAEA,UAAI;AACFU,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,QAAAA,UAAU,CAAC,IAAD,CAAV,CAFE,CAGF;;AACA,cAAMS,QAAQ,GAAG,MAAMnB,GAAG,CAACkB,WAAD,CAA1B;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,YAAIS,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrBN,UAAAA,UAAU,CAAEO,WAAD,IAAiB;AAC1B,mBAAO,CAAC,GAAGA,WAAJ,EAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAACK,GAAT,EAAd,CAApB,CAAP;AACD,WAFS,CAAV;AAGD;AACF,OAXD,CAWE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF;;AAEDG,IAAAA,YAAY;AACb,GA1BQ,EA0BN,CAACP,OAAD,CA1BM,CAAT;AA4BA,SAAO;AACLC,IAAAA,OADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD;;GAtCuBN,U","sourcesContent":["import { get, getDatabase, orderByKey, query, ref } from \"firebase/database\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function useAnswers(videoID) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchAnswers() {\r\n      // database related works\r\n      const db = getDatabase();\r\n      const answerRef = ref(db, \"answers/\" + videoID + \"/questions\");\r\n      const answerQuery = query(answerRef, orderByKey());\r\n\r\n      try {\r\n        setError(false);\r\n        setLoading(true);\r\n        // request firebase database\r\n        const snapshot = await get(answerQuery);\r\n        setLoading(false);\r\n        if (snapshot.exists()) {\r\n          setAnswers((prevAnswers) => {\r\n            return [...prevAnswers, ...Object.values(snapshot.val())];\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setLoading(false);\r\n        setError(true);\r\n      }\r\n    }\r\n\r\n    fetchAnswers();\r\n  }, [videoID]);\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    answers,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}