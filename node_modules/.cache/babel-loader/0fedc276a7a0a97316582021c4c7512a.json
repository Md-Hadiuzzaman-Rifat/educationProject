{"ast":null,"code":"var _jsxFileName = \"E:\\\\hadi\\\\react\\\\react-quiz\\\\src\\\\components\\\\MiniPlayer.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport classes from \"../styles/MiniPlayer.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MiniPlayer({\n  title,\n  id\n}) {\n  _s();\n\n  const buttonRef = useRef();\n  const [status, setStatus] = useState(false);\n  const videoUrl = `https://www.youtube.com/watch?v=${id}`;\n\n  function toggleMiniPlayer() {\n    if (!status) {\n      buttonRef.current.classList.remove(classes.floatingBtn);\n      setStatus(true);\n    } else {\n      buttonRef.current.classList.add(classes.floatingBtn);\n      setStatus(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.miniPlayer} ${classes.floatingBtn}`,\n    ref: buttonRef,\n    onClick: toggleMiniPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `material-icons-outlined ${classes.open}`,\n      children: [\" \", \"play_circle_filled\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `material-icons-outlined ${classes.close}`,\n      onClick: toggleMiniPlayer,\n      children: [\" \", \"close\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      className: classes.player,\n      url: videoUrl,\n      width: \"300px\",\n      height: \"168px\",\n      playing: status,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MiniPlayer, \"AzwIgBciKMj0Xjza608YxSOxBwA=\");\n\n_c = MiniPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiniPlayer\");","map":{"version":3,"sources":["E:/hadi/react/react-quiz/src/components/MiniPlayer.js"],"names":["useRef","useState","ReactPlayer","classes","MiniPlayer","title","id","buttonRef","status","setStatus","videoUrl","toggleMiniPlayer","current","classList","remove","floatingBtn","add","miniPlayer","open","close","player"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAApB,EAAmC;AAAA;;AAChD,QAAMC,SAAS,GAAGP,MAAM,EAAxB;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMS,QAAQ,GAAI,mCAAkCJ,EAAG,EAAvD;;AAEA,WAASK,gBAAT,GAA4B;AAC1B,QAAI,CAACH,MAAL,EAAa;AACXD,MAAAA,SAAS,CAACK,OAAV,CAAkBC,SAAlB,CAA4BC,MAA5B,CAAmCX,OAAO,CAACY,WAA3C;AACAN,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAHD,MAGO;AACLF,MAAAA,SAAS,CAACK,OAAV,CAAkBC,SAAlB,CAA4BG,GAA5B,CAAgCb,OAAO,CAACY,WAAxC;AACAN,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF;;AACD,sBACE;AACE,IAAA,SAAS,EAAG,GAAEN,OAAO,CAACc,UAAW,IAAGd,OAAO,CAACY,WAAY,EAD1D;AAEE,IAAA,GAAG,EAAER,SAFP;AAGE,IAAA,OAAO,EAAEI,gBAHX;AAAA,4BAKE;AAAM,MAAA,SAAS,EAAG,2BAA0BR,OAAO,CAACe,IAAK,EAAzD;AAAA,iBACG,GADH,wBAEqB,GAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AACE,MAAA,SAAS,EAAG,2BAA0Bf,OAAO,CAACgB,KAAM,EADtD;AAEE,MAAA,OAAO,EAAER,gBAFX;AAAA,iBAIG,GAJH,WAKQ,GALR;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAgBE,QAAC,WAAD;AACE,MAAA,SAAS,EAAER,OAAO,CAACiB,MADrB;AAEE,MAAA,GAAG,EAAEV,QAFP;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,MAAM,EAAC,OAJT;AAKE,MAAA,OAAO,EAAEF,MALX;AAME,MAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,YAhBF,eAwBE;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA1CuBD,U;;KAAAA,U","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport classes from \"../styles/MiniPlayer.module.css\";\r\n\r\nexport default function MiniPlayer({ title, id }) {\r\n  const buttonRef = useRef();\r\n  const [status, setStatus] = useState(false);\r\n  const videoUrl = `https://www.youtube.com/watch?v=${id}`;\r\n\r\n  function toggleMiniPlayer() {\r\n    if (!status) {\r\n      buttonRef.current.classList.remove(classes.floatingBtn);\r\n      setStatus(true);\r\n    } else {\r\n      buttonRef.current.classList.add(classes.floatingBtn);\r\n      setStatus(false);\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className={`${classes.miniPlayer} ${classes.floatingBtn}`}\r\n      ref={buttonRef}\r\n      onClick={toggleMiniPlayer}\r\n    >\r\n      <span className={`material-icons-outlined ${classes.open}`}>\r\n        {\" \"}\r\n        play_circle_filled{\" \"}\r\n      </span>\r\n      <span\r\n        className={`material-icons-outlined ${classes.close}`}\r\n        onClick={toggleMiniPlayer}\r\n      >\r\n        {\" \"}\r\n        close{\" \"}\r\n      </span>\r\n      <ReactPlayer\r\n        className={classes.player}\r\n        url={videoUrl}\r\n        width=\"300px\"\r\n        height=\"168px\"\r\n        playing={status}\r\n        controls\r\n      />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}