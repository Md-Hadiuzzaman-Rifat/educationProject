{"ast":null,"code":"var _jsxFileName = \"E:\\\\hadi\\\\react\\\\react-quiz\\\\src\\\\components\\\\ProgressBar.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"../styles/ProgressBar.module.css\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProgressBar({\n  next,\n  prev,\n  submit,\n  progress\n}) {\n  _s();\n\n  const [tooltip, setTooltip] = useState(false);\n  const tooltipRef = useRef();\n\n  function toggleTooltip() {\n    if (tooltip) {\n      setTooltip(false);\n      tooltipRef.current.style.display = \"none\";\n    } else {\n      setTooltip(true);\n      tooltipRef.current.style.left = `calc(${progress}% - 65px)`;\n      tooltipRef.current.style.display = \"block\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.progressBar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.backButton,\n      onClick: prev,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons-outlined\",\n        children: \" arrow_back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.rangeArea,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tooltip,\n        ref: tooltipRef,\n        children: [progress, \"% Complete!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rangeBody,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.progress,\n          style: {\n            width: `${progress}%`\n          },\n          onMouseOver: toggleTooltip,\n          onMouseOut: toggleTooltip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.next,\n      onClick: progress === 100 ? submit : next,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: progress === 100 ? \"Submit Quiz\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons-outlined\",\n        children: \" arrow_forward \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressBar, \"WvziV5R2cJpQ/qj1zJ6gbgccHKY=\");\n\n_c = ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["E:/hadi/react/react-quiz/src/components/ProgressBar.js"],"names":["useRef","useState","classes","Button","ProgressBar","next","prev","submit","progress","tooltip","setTooltip","tooltipRef","toggleTooltip","current","style","display","left","progressBar","backButton","rangeArea","rangeBody","width"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB,CAArB,EAAuD;AAAA;;AACpE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMU,UAAU,GAAGX,MAAM,EAAzB;;AAEA,WAASY,aAAT,GAAyB;AACvB,QAAIH,OAAJ,EAAa;AACXC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,MAAAA,UAAU,CAACE,OAAX,CAAmBC,KAAnB,CAAyBC,OAAzB,GAAmC,MAAnC;AACD,KAHD,MAGO;AACLL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,MAAAA,UAAU,CAACE,OAAX,CAAmBC,KAAnB,CAAyBE,IAAzB,GAAiC,QAAOR,QAAS,WAAjD;AACAG,MAAAA,UAAU,CAACE,OAAX,CAAmBC,KAAnB,CAAyBC,OAAzB,GAAmC,OAAnC;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACe,WAAxB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACgB,UAAxB;AAAoC,MAAA,OAAO,EAAEZ,IAA7C;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACiB,SAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEjB,OAAO,CAACO,OAAxB;AAAiC,QAAA,GAAG,EAAEE,UAAtC;AAAA,mBACGH,QADH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACkB,SAAxB;AAAA,+BACE;AACE,UAAA,SAAS,EAAElB,OAAO,CAACM,QADrB;AAEE,UAAA,KAAK,EAAE;AAAEa,YAAAA,KAAK,EAAG,GAAEb,QAAS;AAArB,WAFT;AAGE,UAAA,WAAW,EAAEI,aAHf;AAIE,UAAA,UAAU,EAAEA;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAiBE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEV,OAAO,CAACG,IADrB;AAEE,MAAA,OAAO,EAAEG,QAAQ,KAAK,GAAb,GAAmBD,MAAnB,GAA4BF,IAFvC;AAAA,8BAIE;AAAA,kBAAOG,QAAQ,KAAK,GAAb,GAAmB,aAAnB,GAAmC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA1CuBJ,W;;KAAAA,W","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"../styles/ProgressBar.module.css\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function ProgressBar({ next, prev, submit, progress }) {\r\n  const [tooltip, setTooltip] = useState(false);\r\n  const tooltipRef = useRef();\r\n\r\n  function toggleTooltip() {\r\n    if (tooltip) {\r\n      setTooltip(false);\r\n      tooltipRef.current.style.display = \"none\";\r\n    } else {\r\n      setTooltip(true);\r\n      tooltipRef.current.style.left = `calc(${progress}% - 65px)`;\r\n      tooltipRef.current.style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.progressBar}>\r\n      <div className={classes.backButton} onClick={prev}>\r\n        <span className=\"material-icons-outlined\"> arrow_back </span>\r\n      </div>\r\n      <div className={classes.rangeArea}>\r\n        <div className={classes.tooltip} ref={tooltipRef}>\r\n          {progress}% Complete!\r\n        </div>\r\n        <div className={classes.rangeBody}>\r\n          <div\r\n            className={classes.progress}\r\n            style={{ width: `${progress}%` }}\r\n            onMouseOver={toggleTooltip}\r\n            onMouseOut={toggleTooltip}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        className={classes.next}\r\n        onClick={progress === 100 ? submit : next}\r\n      >\r\n        <span>{progress === 100 ? \"Submit Quiz\" : \"Next Question\"}</span>\r\n        <span className=\"material-icons-outlined\"> arrow_forward </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}