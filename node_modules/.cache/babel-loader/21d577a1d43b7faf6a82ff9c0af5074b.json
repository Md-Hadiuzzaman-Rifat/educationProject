{"ast":null,"code":"var _jsxFileName = \"E:\\\\hadi\\\\react\\\\react-quiz\\\\src\\\\components\\\\Videos.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Link } from \"react-router-dom\";\nimport useVideoList from \"../hooks/useVideoList\";\nimport Video from \"./Video\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Videos() {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const {\n    loading,\n    error,\n    videos,\n    hasMore\n  } = useVideoList(page);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [videos.length > 0 && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: videos.length,\n      hasMore: hasMore,\n      loader: \"Loading...\",\n      next: () => setPage(page + 8),\n      children: videos.map(video => video.noq > 0 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/quiz/${video.youtubeID}`,\n          state: {\n            videoTitle: video.title\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          title: video.title,\n          id: video.youtubeID,\n          noq: video.noq\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, video.youtubeID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Video, {\n        title: video.title,\n        id: video.youtubeID,\n        noq: video.noq\n      }, video.youtubeID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), !loading && videos.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 43\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There was an error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Videos, \"ub5tyGN/0+/XFgkfBdxdEwiO6lM=\", false, function () {\n  return [useVideoList];\n});\n\n_c = Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["E:/hadi/react/react-quiz/src/components/Videos.js"],"names":["useState","InfiniteScroll","Link","useVideoList","Video","Videos","page","setPage","loading","error","videos","hasMore","length","map","video","noq","pathname","youtubeID","state","videoTitle","title"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA;AAA1B,MAAsCR,YAAY,CAACG,IAAD,CAAxD;AAEA,sBACE;AAAA,eACGI,MAAM,CAACE,MAAP,GAAgB,CAAhB,iBACC,QAAC,cAAD;AACE,MAAA,UAAU,EAAEF,MAAM,CAACE,MADrB;AAEE,MAAA,OAAO,EAAED,OAFX;AAGE,MAAA,MAAM,EAAC,YAHT;AAIE,MAAA,IAAI,EAAE,MAAMJ,OAAO,CAACD,IAAI,GAAG,CAAR,CAJrB;AAAA,gBAMGI,MAAM,CAACG,GAAP,CAAYC,KAAD,IACVA,KAAK,CAACC,GAAN,GAAY,CAAZ,gBACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,QAAQ,EAAG,SAAQF,KAAK,CAACG,SAAU,EADjC;AAEFC,UAAAA,KAAK,EAAE;AACLC,YAAAA,UAAU,EAAEL,KAAK,CAACM;AADb;AAFL,SADN;AAAA,+BASE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEN,KAAK,CAACM,KADf;AAEE,UAAA,EAAE,EAAEN,KAAK,CAACG,SAFZ;AAGE,UAAA,GAAG,EAAEH,KAAK,CAACC;AAHb;AAAA;AAAA;AAAA;AAAA;AATF,SAOOD,KAAK,CAACG,SAPb;AAAA;AAAA;AAAA;AAAA,cADF,gBAiBE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEH,KAAK,CAACM,KADf;AAEE,QAAA,EAAE,EAAEN,KAAK,CAACG,SAFZ;AAGE,QAAA,GAAG,EAAEH,KAAK,CAACC;AAHb,SAIOD,KAAK,CAACG,SAJb;AAAA;AAAA;AAAA;AAAA,cAlBH;AANH;AAAA;AAAA;AAAA;AAAA,YAFJ,EAoCG,CAACT,OAAD,IAAYE,MAAM,CAACE,MAAP,KAAkB,CAA9B,iBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApCtC,EAqCGH,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArCZ,EAsCGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GA9CuBH,M;UAEsBF,Y;;;KAFtBE,M","sourcesContent":["import { useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useVideoList from \"../hooks/useVideoList\";\r\nimport Video from \"./Video\";\r\n\r\nexport default function Videos() {\r\n  const [page, setPage] = useState(1);\r\n  const { loading, error, videos, hasMore } = useVideoList(page);\r\n\r\n  return (\r\n    <div>\r\n      {videos.length > 0 && (\r\n        <InfiniteScroll\r\n          dataLength={videos.length}\r\n          hasMore={hasMore}\r\n          loader=\"Loading...\"\r\n          next={() => setPage(page + 8)}\r\n        >\r\n          {videos.map((video) =>\r\n            video.noq > 0 ? (\r\n              <Link\r\n                to={{\r\n                  pathname: `/quiz/${video.youtubeID}`,\r\n                  state: {\r\n                    videoTitle: video.title,\r\n                  },\r\n                }}\r\n                key={video.youtubeID}\r\n              >\r\n                <Video\r\n                  title={video.title}\r\n                  id={video.youtubeID}\r\n                  noq={video.noq}\r\n                />\r\n              </Link>\r\n            ) : (\r\n              <Video\r\n                title={video.title}\r\n                id={video.youtubeID}\r\n                noq={video.noq}\r\n                key={video.youtubeID}\r\n              />\r\n            )\r\n          )}\r\n        </InfiniteScroll>\r\n      )}\r\n      {!loading && videos.length === 0 && <div>No data found!</div>}\r\n      {error && <div>There was an error!</div>}\r\n      {loading && <div>Loading...</div>}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}